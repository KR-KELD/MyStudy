// HLSL
cbuffer myDataCB
{
	float4x4  g_matWorld: packoffset(c0);
	float4x4  g_matView: packoffset(c4);
	float4x4  g_matProj: packoffset(c8);
	float4 vColor : packoffset(c12);
	float  fTime  : packoffset(c13.x);
	float  fGameTime  : packoffset(c13.y);
};
struct VS_INPUT
{
	float3 p : POSITION;
	float3 n : NORMAL;
	float4 c : COLOR;
	float2 t : TEXTURE;
	row_major float4x4 mTransform : TRANSFORM;
	uint IntanceID : SV_InstanceID;
};
struct VS_OUTPUT
{
	float4 p : SV_POSITION;
	float3 n : NORMAL;
	float4 c : COLOR0;
	float2 t : TEXCOORD0;
};
VS_OUTPUT VS( VS_INPUT vIn)
{
	VS_OUTPUT vOut;
	float4 p = mul(float4(vIn.p,1.0f),vIn.mTransform);
	//float4 p = float4(vIn.p,1.0f);
	//p = mul(p, g_matWorld);
	p = mul(p, g_matView);
	vOut.p = mul(p, g_matProj);
	// dot
	vOut.n = vIn.n;
	vOut.c = vIn.c;
	vOut.t = vIn.t;	
	//vOut.i = vIn.InstanceID;
	return vOut;
}
